/**
 * 1、什么是闭包？
 *      由于作用域链，只有函数内部的子函数才能读取函数内部的局部变量，简单说就是一个函数内部返回另外一个函数，
 * return出去的函数可以在外部访问之前函数的内部的变量，之前的函数执行完，变量也不会销毁。
 * 原理是：作用域链，当前作用域可以访问上级作用域中的变量 
 * 应用：能够模仿块级作用域，能够实现柯里化，在构造函数中定义特权方法、Vue中数据响应式Observer中使用闭包等，防抖节流
 *  es5通过立即执行函数形成封闭空间，可以解决var
 *  被内部函数访问的外部函数的变量能够被保存下来不被回收
 *  优点：1、可让一个变量常驻内存，函数执行完不被销毁，用的多了就成了缺点
 *        2、避免全局变量的污染
 *        3、私有化变量
 *  缺点：1、会比其余函数占用更多的内存
 *        2、引发内存泄露
 */


 /**
 * 问题1产生问题2、问题3
 * 2、怎么样避免内存泄漏？
 * 1、尽量减少使用闭包
 * 2、外部变量使用完毕后，赋值为null，垃圾回收机制进行释放，将闭包引用的外部函数中活动对象清除，
 * 3、变量声明的时候使用let进行声明
 * 定时器及时清空
 * 
 * 
 * 3、使用let，const能够避免闭包吗？
 *  可以，let可以声明一个块级作用域
 */


